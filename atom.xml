<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-11-16T03:53:33.649Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis</title>
    <link href="http://example.com/2024/11/16/Redis/"/>
    <id>http://example.com/2024/11/16/Redis/</id>
    <published>2024-11-16T01:31:13.000Z</published>
    <updated>2024-11-16T03:53:33.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、<strong>缓存</strong>和消息中<br>间件。 它支持多种类型的数据结构</p><h3 id="缓存（Cache）的概念"><a href="#缓存（Cache）的概念" class="headerlink" title="缓存（Cache）的概念"></a>缓存（Cache）的概念</h3><p>缓存是存储在计算机上的一个原始数据复制集，以便于访问。</p><p><img src="http://img.cloves.top/imgs/image-20241113171033019.png" alt="image-20241113171033019"></p><h3 id="缓存命中率的一些概念"><a href="#缓存命中率的一些概念" class="headerlink" title="缓存命中率的一些概念"></a>缓存命中率的一些概念</h3><img src="http://img.cloves.top/imgs/缓存设计命中率.png" alt="缓存设计命中率" style="zoom:150%;" /><h3 id="Redis的命令"><a href="#Redis的命令" class="headerlink" title="Redis的命令"></a><strong>Redis的命令</strong></h3><ul><li>指定database  select 0</li></ul><h4 id="操作Key"><a href="#操作Key" class="headerlink" title="操作Key"></a>操作Key</h4><ul><li>exists 查询key是否存在</li><li>keys 查询是否存在指定的key</li><li>type 查询key的数据类型</li><li>scan 扫描当前库中所有的key</li></ul><h4 id="操作String"><a href="#操作String" class="headerlink" title="操作String"></a>操作String</h4><ul><li>set :添加一条String类型数据</li><li>get :获取一条String类型数据</li><li>mset :添加多条String类型数据</li><li>mget :获取多条String类型数据</li><li>incr :增加1</li><li>decr：减少1</li></ul><h4 id="操作hash"><a href="#操作hash" class="headerlink" title="操作hash"></a>操作hash</h4><ul><li>hset :添加一条hash类型数据</li><li>hget :获取一条hash类型数据</li><li>hmset :添加多条hash类型数据</li><li>hmget :获取多条hash类型数据</li><li>hgetAll :获取指定所有hash类型数据</li><li>hdel :删除指定hash类型数据(一条或多条)</li></ul><h4 id="操作list"><a href="#操作list" class="headerlink" title="操作list"></a>操作list</h4><ul><li><p>lpush :左添加(头)list类型数据</p></li><li><p>rpush :右添加(尾)类型数据</p></li><li><p>lrange : 获取list类型数据start起始下标 end结束下标 包含关系</p></li><li><p>llen :获取条数</p></li><li><p>lrem :删除列表中几个指定list类型数据</p><ul><li><pre><code>lrem key count valuecount &gt; 0 从前向后删除count个valuecount &lt;0 从后向前删除 绝对值（count） 个valuecount = 0 删除所有的value</code></pre></li></ul></li></ul><h4 id="操作set"><a href="#操作set" class="headerlink" title="操作set"></a>操作set</h4><ul><li>sadd :添加set类型数据</li><li>smembers :获取set类型数据</li><li>scard :获取条数</li><li>srem :删除数据</li></ul><h4 id="操作sorted-set"><a href="#操作sorted-set" class="headerlink" title="操作sorted set"></a>操作sorted set</h4><p>sorted set是通过分数值来进行排序的，分数值越大，越靠后。</p><ul><li><p>zadd :添加sorted set类型数据</p><p>zadd需要将Float或者Double类型分数值参数，放置在值参数之前</p></li><li><p>zrange :获取sorted set类型数据</p></li><li><p>zcard :获取条数</p></li><li><p>zrem :删除数据</p></li></ul><h4 id="操作namespace"><a href="#操作namespace" class="headerlink" title="操作namespace"></a>操作namespace</h4><ul><li><p>mset 添加数据   例  mset user:01 zhangsan</p></li><li><p>mget 获取数据    例 mget  user:01</p></li></ul><h4 id="操作失效时间"><a href="#操作失效时间" class="headerlink" title="操作失效时间"></a>操作失效时间</h4><ul><li><p>EXPLRE 简写 EX  ex &lt;key&gt; &lt;ttl&gt;  用于生成键的同时设置生存时间（秒）   </p><p>例 set  code test EX 180</p></li><li><p>PEXPIRE &lt;key&gt;  &lt;ttl&gt; 可以将 已有的键 key 的过期时间设置为 <strong>毫秒</strong> 不加 P 是秒</p><p>例  pexpire  code 1000</p></li><li><p>NX 是key不存在时才set，防止覆盖    XX 是key存在时才set，不创建新的key</p><p> EX 是秒， PX 是毫秒     例 set  code  test  nx  ex 180</p></li></ul><h4 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h4><ul><li>del :用于删除数据（通用，适用于所有数据类型）</li><li>hdel :用于删除hash类型数据</li></ul><h3 id="Redis的事务机制"><a href="#Redis的事务机制" class="headerlink" title="Redis的事务机制"></a>Redis的事务机制</h3><p>Redis事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程<br>中，不会被其他客户端发送来的命令请求所打断。</p><p>Redis事务的主要作用就是串联多个命令防止别的命令插队。</p><h4 id="事务的操作命令"><a href="#事务的操作命令" class="headerlink" title="事务的操作命令"></a>事务的操作命令</h4><p>Multi、Exec、discard</p><p>输入Multi命令开始，输入的命令都会依次进入命令队列中，但不会执行。<br>输入Exec后，Redis会将之前的命令队列中的命令依次执行。<br>组队的过程中可以通过discard来放弃组队。</p><h4 id="事务的错误处理"><a href="#事务的错误处理" class="headerlink" title="事务的错误处理"></a>事务的错误处理</h4><p>组队阶段某个命令出现了报告错误，执行时整个的所有队列会都会被取消。<br>执行阶段某个命令报出了错误，则只有报错的命令不会被执行，而其他的命令都会执行，不会回滚。</p><h3 id="Redis的高可用"><a href="#Redis的高可用" class="headerlink" title="Redis的高可用"></a>Redis的高可用</h3><p>在Redis中，实现高可用的技术主要包括持久化、复制、哨兵和集群。</p><h4 id="数据的持久化（数据落盘）"><a href="#数据的持久化（数据落盘）" class="headerlink" title="数据的持久化（数据落盘）"></a>数据的持久化（数据落盘）</h4><h5 id="RDB-Redis-DataBase"><a href="#RDB-Redis-DataBase" class="headerlink" title="RDB(Redis DataBase)"></a>RDB(Redis DataBase)</h5><h5 id="AOF-Append-Only-File"><a href="#AOF-Append-Only-File" class="headerlink" title="AOF(Append Only File)"></a>AOF(Append Only File)</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Redis&quot;&gt;&lt;a href=&quot;#Redis&quot; class=&quot;headerlink&quot; title=&quot;Redis&quot;&gt;&lt;/a&gt;Redis&lt;/h1&gt;&lt;p&gt;Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、&lt;strong&gt;缓存&lt;/stro</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2024/11/15/hello-world/"/>
    <id>http://example.com/2024/11/15/hello-world/</id>
    <published>2024-11-15T14:11:23.805Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
